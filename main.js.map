{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo/./node_modules/date-fns/toDate.mjs","webpack://todo/./node_modules/date-fns/startOfDay.mjs","webpack://todo/./node_modules/date-fns/isToday.mjs","webpack://todo/./node_modules/date-fns/isSameDay.mjs","webpack://todo/./node_modules/date-fns/constructFrom.mjs","webpack://todo/./node_modules/date-fns/add.mjs","webpack://todo/./node_modules/date-fns/addMonths.mjs","webpack://todo/./node_modules/date-fns/addDays.mjs","webpack://todo/./src/Models/Task.js","webpack://todo/./src/Models/ProjectsContainer.js","webpack://todo/./src/Models/Project.js","webpack://todo/./src/utils.js","webpack://todo/./src/dataController.js","webpack://todo/./node_modules/date-fns/startOfToday.mjs","webpack://todo/./src/Views/MenuView.js","webpack://todo/./node_modules/date-fns/isValid.mjs","webpack://todo/./node_modules/date-fns/isDate.mjs","webpack://todo/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://todo/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://todo/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://todo/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://todo/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://todo/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://todo/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://todo/./node_modules/date-fns/locale/en-US.mjs","webpack://todo/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://todo/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://todo/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://todo/./node_modules/date-fns/constants.mjs","webpack://todo/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://todo/./node_modules/date-fns/getDayOfYear.mjs","webpack://todo/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://todo/./node_modules/date-fns/startOfYear.mjs","webpack://todo/./node_modules/date-fns/startOfWeek.mjs","webpack://todo/./node_modules/date-fns/startOfISOWeek.mjs","webpack://todo/./node_modules/date-fns/getISOWeekYear.mjs","webpack://todo/./node_modules/date-fns/getISOWeek.mjs","webpack://todo/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://todo/./node_modules/date-fns/getWeekYear.mjs","webpack://todo/./node_modules/date-fns/getWeek.mjs","webpack://todo/./node_modules/date-fns/startOfWeekYear.mjs","webpack://todo/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://todo/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://todo/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://todo/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://todo/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://todo/./node_modules/date-fns/format.mjs","webpack://todo/./node_modules/date-fns/isEqual.mjs","webpack://todo/./src/Views/ContentView.js","webpack://todo/./src/Views/OverlayView.js","webpack://todo/./src/eventHandlers.js","webpack://todo/./src/index.js"],"sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { addDays } from \"./addDays.mjs\";\nimport { addMonths } from \"./addMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\\\\-7\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport function add(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Add years and months\n  const _date = toDate(date);\n  const dateWithMonths =\n    months || years ? addMonths(_date, months + years * 12) : _date;\n\n  // Add weeks and days\n  const dateWithDays =\n    days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1000;\n  const finalDate = constructFrom(date, dateWithDays.getTime() + msToAdd);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default add;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","const Task = (newTitle, newDesc, newDate, newPriority, newisComplete) => {\n    let title = newTitle;\n    let description = newDesc;\n    let dueDate = newDate;\n    let priority = newPriority;\n    let isComplete = newisComplete;\n\n    const getTitle = () => title;\n    const getDescription = () => description; \n    const getDueDate = () => dueDate;\n    const getPriority = () => priority;\n    const getisComplete = () => isComplete;\n\n    const setTitle = (newTitle) => { title = newTitle };\n    const setDescription = (newDesc) => { description = newDesc }; \n    const setDueDate = (newDate) => { dueDate = newDate };\n    const setPriority = (newPriority) => { priority = newPriority }; \n    const toggleisComplete = () => { isComplete = !isComplete; };\n    \n    return { getTitle, getDescription, getDueDate, getPriority, setTitle, \n             setDescription, setDueDate, setPriority, getisComplete, toggleisComplete }\n};\nexport { Task }\n","import { Project } from \"./Project\";\n\nconst ProjectsContainer = (() => {\n    let projects = [];\n\n    const createProject = (title) => {\n        projects.push(Project(title));\n    }\n\n    const getProjectByIndex = (index) => {\n        return projects[index];\n    }\n\n    const getProject = (title) => {\n        for (let i=0; i < projects.length; i++) {\n            if (projects[i].getTitle() == title) {\n                return projects[i]; \n            }\n        }\n    }\n\n    const getSize = () => { \n        return projects.length;\n    }\n\n    return { createProject, getProjectByIndex, getProject, getSize }\n})();\n\nexport { ProjectsContainer }","import { Task } from \"./Task\";\n\nconst Project = (title) => {\n    const project_title = title;\n    var tasks = [];\n    // sorted insert by priority\n    const insert = (task) => {\n        let ins_prior = priorityParser(task.priority);\n        let ins_date = new Date(0);\n        if (task.dueDate != \"\") {\n            const args = task.dueDate.split('-');\n            ins_date = new Date(args[0], parseInt(args[1])-1, args[2]);\n        }\n        if (tasks.length == 0) {\n            tasks.push(Task(task.title, task.description, ins_date, task.priority, task.isComplete));\n            return;\n        }\n        for (let i = 0; i < tasks.length; i++) {\n            let temp_prior = priorityParser(tasks[i].getPriority());\n            if (ins_prior > temp_prior) {\n                tasks.splice(i, 0, Task(task.title, task.description, ins_date, task.priority, task.isComplete));\n                return;\n            } \n            else {\n                if (i == tasks.length-1) {\n                    tasks.push(Task(task.title, task.description, ins_date, task.priority, task.isComplete));\n                    return;\n                }\n                else if (ins_prior > priorityParser(tasks[i+1].getPriority)) {\n                    tasks.splice(i+1, 0, Task(task.title, task.description, ins_date, task.priority, task.isComplete));\n                    return;\n                }\n            } \n        }\n    };\n\n    const remove = (task_title) => {\n        const index = getElementIndexByTitle(task_title);\n        tasks.splice(index, 1);\n    };\n\n    const priorityParser = (str) => {\n        const LOW = 0, MED = 1, HIGH = 2;\n        switch (str) {\n            case 'low': return LOW;\n            case 'medium': return MED;\n            case 'high': return HIGH;\n        }\n    };\n\n\n    const getTitle = () => project_title;\n\n    const getElementAt = (index) => tasks[index];\n\n    const getElementIndexByTitle = (target_title) => {\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].getTitle() == target_title) {\n                return i;\n            }\n        }\n        return -1;\n    };\n\n    const getSize = () => tasks.length;\n\n    const exportData = () => {\n        let data = []; \n        for (let i = 0; i < tasks.length; i++) {\n            const date = tasks[i].getDueDate();\n            data.push({\n                title: tasks[i].getTitle(),\n                dueDate: `${date.getFullYear()}-${parseInt(date.getMonth())+1}-${date.getDate()}`,\n                priority: tasks[i].getPriority(),\n                description: tasks[i].getDescription(), \n                isComplete: tasks[i].getisComplete()\n            });\n        }\n        return data;\n    }\n\n    return { insert, remove, getTitle, \n            getElementAt, getElementIndexByTitle, getSize, exportData}\n} \nexport { Project }","function isStandardElement(element) {\n    return element instanceof HTMLElement\n      && !(element instanceof HTMLUnknownElement);\n  }\n  \nfunction createDOMElement(tagName, HTML_attributes = {}, content = null) {\n  const element = document.createElement(tagName);\n  \n  if (!isStandardElement(element))\n    console.warn(tagName + \" is not a standard tag name.\");\n\n  for (const attribute in HTML_attributes)\n    element.setAttribute(attribute, HTML_attributes[attribute]);\n\n  if (content)\n    element.innerHTML = content;\n\n  return element;\n}\n\nfunction writeToStorage(key, value) {\n  window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction loadStorage() {\n  let data = [];\n  for (let i = 0; i < window.localStorage.length; i++) {\n    let key = window.localStorage.key(i)\n    let value = window.localStorage.getItem(key);\n    data.push({key: key, value: JSON.parse(value)});\n  }\n  return data;\n}\n\nexport { createDOMElement, writeToStorage, loadStorage }","import { add, isToday, startOfToday } from 'date-fns';\nimport { ProjectsContainer } from './Models/ProjectsContainer.js'\nimport { loadStorage, writeToStorage } from './utils.js';\n\nconst dataController = (() => {\n\n    function importProjects() {\n        const projects = loadStorage();\n        projects.forEach((obj) => {\n            const project_title = obj.key;\n            const tasks = obj.value;\n            createNewProject(project_title);\n            tasks.forEach((task) => {\n                createNewTask(project_title, {\n                    title: task.title,\n                    dueDate: task.dueDate,\n                    priority: task.priority,\n                    description: task.description,\n                    isComplete: task.isComplete\n                })\n            });\n        });\n    }\n\n    function createNewProject(title) {\n        ProjectsContainer.createProject(title);\n        writeToStorage(title, ProjectsContainer.getProject(title).exportData());\n    }\n    function readAllProjectTitles() {\n        let res = [];\n        for (let i = 0; i < ProjectsContainer.getSize(); i++) {\n            res.push(ProjectsContainer.getProjectByIndex(i).getTitle());\n        }\n        return res;\n    }\n    function createNewTask(project_title, task) {\n        const project = ProjectsContainer.getProject(project_title);\n        project.insert(task)\n        writeToStorage(project_title, ProjectsContainer.getProject(project_title).exportData());\n    }\n\n    function editTask(project_title, task_title, edits) {\n        const project = ProjectsContainer.getProject(project_title);\n        for (let i=0; i < project.getSize(); i++) {\n            const curr_task = project.getElementAt(i);\n            if (task_title == curr_task.getTitle()) {\n                project.getElementAt(i).setTitle(edits.title);\n                project.getElementAt(i).setPriority(edits.priority);\n                project.getElementAt(i).setDescription(edits.desc);\n                if (edits.dueDate == \"\") {\n                    project.getElementAt(i).setDueDate(new Date(0));\n                } else {\n                    const args = edits.dueDate.split('-');\n                    project.getElementAt(i).setDueDate(new Date(args[0], parseInt(args[1])-1, args[2]));\n                }\n                writeToStorage(project_title, ProjectsContainer.getProject(project_title).exportData());\n                return;\n            }\n        }\n    }\n    function readProjectAllTasks(project_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        let query = [];\n        for (let i = 0; i < project.getSize(); i++) {\n            const task = project.getElementAt(i);\n            let task_contents = {\n                title: task.getTitle(),\n                dueDate: task.getDueDate(),\n                priority: task.getPriority(),\n                description: task.getDescription(),\n                isComplete: task.getisComplete(), \n                project_title: project_title\n            };\n            query.push(task_contents);\n        }\n        return query;\n    }\n    function readProjectTask(project_title, task_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        for (let i=0; i < project.getSize(); i++) {\n            const curr_task = project.getElementAt(i);\n            if (task_title == curr_task.getTitle()) {\n                return { title: curr_task.getTitle(), \n                         dueDate: curr_task.getDueDate(), \n                         priority: curr_task.getPriority(),\n                         description: curr_task.getDescription(),\n                         isComplete: curr_task.getisComplete(),\n                         project_title: project_title\n                        }\n            }\n        }\n    }\n    function deleteProjectTask(project_title, task_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        for (let i=0; i < project.getSize(); i++) {\n            const curr_task = project.getElementAt(i);\n            if (task_title == curr_task.getTitle()) {\n                project.remove(task_title);\n                writeToStorage(project_title, ProjectsContainer.getProject(project_title).exportData());\n                return true;\n            }\n        }\n        return false;\n    }\n    function toggleTask(project_title, task_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        for (let i=0; i < project.getSize(); i++) {\n            const curr_task = project.getElementAt(i);\n            if (task_title == curr_task.getTitle()) {\n                curr_task.toggleisComplete();\n                writeToStorage(project_title, ProjectsContainer.getProject(project_title).exportData());\n                return true;\n            }\n        }\n        return false;\n    }\n    function deleteProjectCompleteTasks(project_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        for (let i=project.getSize()-1; i >= 0; i--) {\n            if (project.getElementAt(i).getisComplete()) {\n                const title = project.getElementAt(i).getTitle();\n                project.remove(title);\n                writeToStorage(project_title, ProjectsContainer.getProject(project_title).exportData());\n            }\n        }\n    }\n    function queryCompleteCount(project_title) {\n        const project = ProjectsContainer.getProject(project_title);\n        let count = 0;\n        for (let i=0; i < project.getSize(); i++) {\n            if (project.getElementAt(i).getisComplete()) {\n                count+=1;\n            }\n        }\n        return count;\n    }\n\n    function queryAllTasksToday() {\n        let ret = [];\n        for (let i = 0; i < ProjectsContainer.getSize(); i++) {\n            const project = ProjectsContainer.getProjectByIndex(i);\n            for (let j = 0; j < project.getSize(); j++) {\n                const task = project.getElementAt(j);\n                if (isToday(task.getDueDate())) {\n                    ret.push({\n                        project_title: project.getTitle(),\n                        title: task.getTitle(),\n                        dueDate: task.getDueDate(),\n                        priority: task.getPriority(), \n                        description: task.getDescription(),\n                        isComplete: task.getisComplete()\n                    });\n                }\n            }\n        }\n        return ret;\n    } \n\n    function queryAllTasksWeek() {\n        let ret = [];\n        for (let i = 0; i < ProjectsContainer.getSize(); i++) {\n            const project = ProjectsContainer.getProjectByIndex(i);\n            for (let j = 0; j < project.getSize(); j++) {\n                const task = project.getElementAt(j);\n                const task_date = task.getDueDate().getTime();\n                if (task_date >= startOfToday().getTime() && task_date <= add(Date.now(), {weeks: 1}).getTime()) {\n                    ret.push({\n                        project_title: project.getTitle(),\n                        title: task.getTitle(),\n                        dueDate: task.getDueDate(),\n                        priority: task.getPriority(), \n                        description: task.getDescription(),\n                        isComplete: task.getisComplete()\n                    });\n                }\n            }\n        }\n        return ret;\n    } \n\n    function queryAllTasksByCompletion(isComplete) {\n        let ret = [];\n        for (let i = 0; i < ProjectsContainer.getSize(); i++) {\n            const project = ProjectsContainer.getProjectByIndex(i);\n            for (let j = 0; j < project.getSize(); j++) {\n                const task = project.getElementAt(j);\n                if (isComplete == task.getisComplete()) {\n                    ret.push({\n                        project_title: project.getTitle(),\n                        title: task.getTitle(),\n                        dueDate: task.getDueDate(),\n                        priority: task.getPriority(), \n                        description: task.getDescription(), \n                        isComplete: task.getisComplete()\n                    });\n                }\n            }\n        }\n        return ret;\n    }\n\n    function queryAllTasksByPriority(priority) {\n        let ret = [];\n        for (let i = 0; i < ProjectsContainer.getSize(); i++) {\n            const project = ProjectsContainer.getProjectByIndex(i);\n            for (let j = 0; j < project.getSize(); j++) {\n                const task = project.getElementAt(j);\n                if (priority == task.getPriority()) {\n                    ret.push({\n                        project_title: project.getTitle(),\n                        title: task.getTitle(),\n                        dueDate: task.getDueDate(),\n                        priority: task.getPriority(), \n                        description: task.getDescription(), \n                        isComplete: task.getisComplete()\n                    });\n                }\n            }\n        }\n        return ret;\n    }\n\n    return { createNewProject, createNewTask, editTask, \n            readProjectAllTasks, readProjectTask, deleteProjectTask, \n            toggleTask, queryCompleteCount, deleteProjectCompleteTasks,\n            queryAllTasksByCompletion, queryAllTasksByPriority, queryAllTasksToday, \n            queryAllTasksWeek, importProjects, readAllProjectTitles }\n})();\n\nexport { dataController }","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * @returns The start of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nexport function startOfToday() {\n  return startOfDay(Date.now());\n}\n\n// Fallback for modularized imports:\nexport default startOfToday;\n","import { dataController } from '../dataController';\nimport { createDOMElement } from \"../utils\";\n\n/* Responsible for all DOM manipulation that occurs in the menu */\n\nexport const MenuView = (() => {\n    function showAddListForm () {\n        document.getElementById('add-list').classList.add('hidden');\n        document.getElementById('new-list-form').classList.remove('hidden');\n    }\n    function hideAddListForm () {\n        document.getElementById('add-list').classList.remove('hidden');\n        document.getElementById('new-list-form').classList.add('hidden');\n    }\n    function renderProjectsList(form) {\n        const query = dataController.readAllProjectTitles();\n        for (let i = 0; i < query.length; i++) {\n            const menu_li = createDOMElement('li', {class: 'project tab'}, query[i]);\n            document.getElementById('menu-list').append(menu_li);\n        }\n    }\n    function SubmitNewProjectForm(form) {\n        const formData = new FormData(form);\n        const project_title = formData.get(\"new-project-title\");\n        dataController.createNewProject(project_title);\n    }\n    function updateActiveTab(li) {\n        const menu_list = document.getElementById('menu-list');\n        Array.from(menu_list.children).forEach((node) => node.classList.remove('active'));\n        li.classList.add('active'); \n    }\n    return { showAddListForm, hideAddListForm, renderProjectsList, SubmitNewProjectForm, updateActiveTab }\n})();","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const utcDate = new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    startOfDayRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff =\n    startOfISOWeek(_date).getTime() - startOfISOWeekYear(_date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff =\n    startOfWeek(_date, options).getTime() -\n    startOfWeekYear(_date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.floor(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate,\n  };\n\n  const result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function (substring) {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map(function (substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = formatters[firstCharacter];\n      if (formatter) {\n        if (\n          !options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        if (\n          !options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        return formatter(\n          originalDate,\n          substring,\n          locale.localize,\n          formatterOptions,\n        );\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport function isEqual(leftDate, rightDate) {\n  const _dateLeft = toDate(leftDate);\n  const _dateRight = toDate(rightDate);\n  return +_dateLeft === +_dateRight;\n}\n\n// Fallback for modularized imports:\nexport default isEqual;\n","import { dataController } from '../dataController';\nimport { createDOMElement } from \"../utils\";\nimport { format, isBefore, startOfDay } from \"date-fns\";\nimport { isEqual } from \"date-fns\";\n\n/* Responsible for all DOM manipulation that occurs in the content area of the webpage */\n\nexport const ContentView = (() => {\n    function toggleTaskDesc(item) {\n        const btm_desc = item.children.item(1);\n        if (btm_desc.textContent == \"\") {\n            btm_desc.textContent = \"No description available...\";\n            btm_desc.style.color = \"#888\";\n            btm_desc.style.fontStyle = \"italic\";\n        }\n        if (item.classList.contains('open')){\n            item.classList.remove('open');\n            btm_desc.classList.add('hidden');\n        } else {\n            btm_desc.classList.remove('hidden');\n            item.classList.add('open');\n        }\n    }\n    function removeTask(taskItem) {\n        dataController.deleteProjectTask(taskItem.data.project_title, taskItem.data.task_title);\n    }  \n    function toggleTaskCompletion(li) {\n        dataController.toggleTask(li.data.project_title, li.data.task_title);\n        strikeThroughListItem(li);\n        let count = 0;\n        Array.from(li.parentElement.children).forEach((li) => {\n            if (li.data.isComplete == \"true\") { \n                count+=1; \n            }\n        });\n        document.getElementById('task-counter').textContent = count + \" completed tasks\";\n    }\n    function clearCompletedTasks() {\n        const ul_tasks = document.querySelector('ul#tasks');\n        Array.from(ul_tasks.children).forEach((li) => {\n            if (li.data.isComplete == \"true\") {\n                dataController.deleteProjectTask(li.data.project_title, li.data.task_title);\n            }\n        });\n    }\n    function refreshTaskContent() {\n        let res = [];\n        const active_tab = document.querySelector('.active');\n        if (active_tab.classList.contains('filter')) {\n            document.getElementById('add-task').classList.add('hidden');\n            document.getElementById('content-btns').style.justifyContent = \"flex-end\";\n            document.getElementById('content-header-title').textContent = active_tab.children.item(1).textContent;\n            switch (active_tab.id){\n                case 'today': \n                    res = dataController.queryAllTasksToday();\n                    break;\n                case 'week':\n                    res = dataController.queryAllTasksWeek();\n                    break;\n                case 'complete': \n                    res = dataController.queryAllTasksByCompletion(true);\n                    break;\n                case 'incomplete': \n                    res = dataController.queryAllTasksByCompletion(false);\n                    break;\n                case 'high': \n                    res = dataController.queryAllTasksByPriority('high');\n                    break;\n                case 'medium': \n                    res = dataController.queryAllTasksByPriority('medium');\n                    break;\n                case 'low': \n                    res = dataController.queryAllTasksByPriority('low');\n                    break;\n                } \n        }\n        else if (active_tab.classList.contains('project')) {\n            document.getElementById('add-task').classList.remove('hidden');\n            document.getElementById('content-btns').style.justifyContent = \"space-between\";\n            document.getElementById('content-header-title').textContent = active_tab.textContent;\n            const project_title = document.querySelector('#menu-list .active.project').textContent; \n            res = dataController.readProjectAllTasks(project_title);\n        }\n        const ul_tasks = document.getElementById('tasks');\n        ul_tasks.innerHTML = '';\n        let count = 0;\n        res.forEach((task) => {\n            const li_task = createLIHelper(task);\n            strikeThroughListItem(li_task);\n            ul_tasks.appendChild(li_task);\n            if (task.isComplete) { count+=1; }\n        });\n        document.getElementById('task-counter').textContent = count + \" completed tasks\";\n        document.getElementById('list-content').classList.remove('hidden');\n    }\n    function strikeThroughListItem(li) {\n        const radio = li.children.item(0).children.item(0).children.item(0);        \n        const li_top = li.children.item(0); \n\n        const project_title = li.data.project_title;\n        const task_title = li.data.task_title;\n        const task = dataController.readProjectTask(project_title, task_title);\n\n        if (task.isComplete) {\n            li_top.classList.add('strikethrough');\n            radio.innerHTML = 'radio_button_checked';\n            const desc = li_top.nextElementSibling;\n            if (desc.textContent != \"No description available...\" && desc.textContent != \"\") {\n            desc.style.textDecoration = \"line-through\";\n            }\n            li.data.isComplete = \"true\";\n        } else {\n            li_top.classList.remove('strikethrough');\n            radio.innerHTML = 'radio_button_unchecked';\n            const desc = li_top.nextElementSibling;\n            desc.style.textDecoration = \"none\";\n            li.data.isComplete = \"false\";\n        }\n    }\n    function createLIHelper(task) {\n        const li = createDOMElement('li', { class: 'item'});       \n        const li_top = createDOMElement('div', {class: 'li-top'});\n        const task_right = createDOMElement('div', {class: \"task-right\"});\n        const task_left = createDOMElement('div', {class: \"task-left\"});\n        const p_title = createDOMElement('p', {}, task.title);\n        const desc = createDOMElement('p', { class: 'desc hidden' }, task.description);\n        const svg_sq = createDOMElement('span', { class: \"material-symbols-outlined square\" }, 'edit_square');\n        const svg_del = createDOMElement('span', { class: \"material-symbols-outlined delete\" }, 'delete');\n        const svg_radio_unchecked = createDOMElement('span', { class: \"material-symbols-outlined radio\" }, 'radio_button_unchecked');\n        const date = task.dueDate;\n        if (!isEqual(startOfDay(date), startOfDay(new Date(0)))) {\n            const date_to_str = \"due \" + format(date, 'MM/dd/yyyy');\n            task_right.appendChild(createDOMElement('p', { class: 'task-date'}, date_to_str));\n        }\n        const priority = task.priority;\n        const p_priority = createDOMElement('p', { class: priority}, priority)\n        task_left.appendChild(svg_radio_unchecked);\n        task_left.appendChild(p_title);\n        task_right.appendChild(p_priority);\n        task_right.appendChild(svg_sq);\n        task_right.appendChild(svg_del);\n        li_top.appendChild(task_left);\n        li_top.appendChild(task_right);\n        li.appendChild(li_top);\n        li.appendChild(desc);\n        li.data = { project_title: task.project_title, task_title: task.title, isComplete: 'false' }\n        return li;\n    }\n    return { refreshTaskContent, toggleTaskDesc, removeTask, toggleTaskCompletion, strikeThroughListItem, \n            clearCompletedTasks}\n})();","import { dataController } from '../dataController';\nimport { isEqual, startOfDay } from \"date-fns\";\n\n/* Responsible for performing DOM manipulation on all elements that relating to the create/edit task overlay */\n\nexport const OverlayView = (() => {\n    function showAddTaskOverlay() {\n        document.getElementById('overlay').style.display = \"block\";\n        document.querySelector('#overlay-content form legend').textContent = 'New task';\n        document.getElementById('submit-btn').textContent = 'Create task';\n    }\n    function showEditTaskOverlay(li) {\n        const query_res = dataController.readProjectTask(li.data.project_title, li.data.task_title);\n        document.getElementById('overlay').style.display = \"block\";\n        document.querySelector('#overlay-content form legend').textContent = 'Edit task';\n        document.getElementById('submit-btn').textContent = 'Save changes';\n        document.querySelector('input#edit-form-proj-title').value = query_res.project_title;\n        document.querySelector('input#unedited-title').value = query_res.title;\n        document.querySelector('input#title').value = query_res.title;\n        document.querySelector('select#priority').value = query_res.priority;\n        document.querySelector('textarea#desc').value = query_res.description;\n        if (!isEqual(startOfDay(query_res.dueDate), startOfDay(new Date(0)))){\n            document.querySelector('input#duedate').valueAsDate = query_res.dueDate;    \n        }        \n    }\n    function hideOverlay() {\n        document.getElementById('overlay').style.display = \"none\";\n    }\n    function submitOverlay(form) {\n        const formData = new FormData(form);\n        const input_title = formData.get(\"title\");\n        const input_date = formData.get(\"duedate\");\n        const input_priority = formData.get(\"priority\");\n        const input_desc = formData.get(\"desc\");\n        const task = { title: input_title, dueDate: input_date, priority: input_priority, description: input_desc };\n        if (document.querySelector('#overlay-content form legend').textContent == 'New task') {\n            const project_title = document.querySelector('.active').textContent;\n            dataController.createNewTask(project_title, task);\n        }   \n        else {\n            const unedited_title = formData.get(\"unedited-title\");\n            const project_title = formData.get(\"project-title\");\n            dataController.editTask(project_title, unedited_title, task);\n        }\n        form.reset();\n    }\n    return { showAddTaskOverlay, showEditTaskOverlay, hideOverlay, submitOverlay }\n})();","import { MenuView } from './Views/MenuView';\nimport { ContentView } from './Views/ContentView';\nimport { OverlayView} from './Views/OverlayView';\n\nexport const menuEventHandlers = {\n    handleOpenNewProjForm: () => {\n        document.getElementById('add-list').addEventListener('click', (e) => { \n            MenuView.showAddListForm(); \n        });\n    },\n    handleCancelNewProjectForm: () => {\n        document.getElementById('cancel-list').addEventListener('click', (e) => { \n            MenuView.hideAddListForm();\n        });\n    },\n    handleSubmitNewProjectForm: () => {\n        document.getElementById('new-list-form').addEventListener('submit', (e) => {\n            e.preventDefault();\n            MenuView.SubmitNewProjectForm(e.target);\n            MenuView.hideAddListForm();\n            MenuView.renderProjectsList();\n        });\n    },\n    handleClickTab: () => {\n        document.getElementById('menu').addEventListener('click', (e) => {\n            if (e.target.matches('.project')) {\n                MenuView.updateActiveTab(e.target);\n                ContentView.refreshTaskContent();\n            } \n            else if (e.target.matches('.filter')) {\n                MenuView.updateActiveTab(e.target);\n                ContentView.refreshTaskContent();        \n            }\n        });\n    }\n};\n\nexport const listContentEventHandlers = {\n    handleOpenNewTaskForm: () => {\n        document.getElementById('add-task').addEventListener('click', () => { \n            OverlayView.showAddTaskOverlay();\n        });\n    },\n    handleCloseNewTaskForm: () => {\n        document.getElementById('close-btn').addEventListener('click', () => { \n            OverlayView.hideOverlay(); \n        });\n    },\n    handleSubmitNewTaskForm: () => {\n        document.getElementById('new-task-form').addEventListener('submit', (e) => {\n            e.preventDefault();\n            OverlayView.submitOverlay(e.target);\n            ContentView.refreshTaskContent();\n            OverlayView.hideOverlay();\n        });\n    },\n    handleClearTasks: () => {\n        document.getElementById('clear-tasks').addEventListener('click', () => {\n            ContentView.clearCompletedTasks();\n            ContentView.refreshTaskContent();\n        });\n    },\n    handleClickTask: () => {\n        document.getElementById('tasks').addEventListener('click', (e) => {\n            // task card\n            if (e.target && e.target.matches(\"li.item\")) {\n                ContentView.toggleTaskDesc(e.target);\n            }\n            // edit task button\n            else if (e.target && e.target.matches(\"span.square\")) {\n                const li = e.target.closest('li');\n                OverlayView.showEditTaskOverlay(li);\n            }\n            // delete task button\n            else if (e.target && e.target.matches(\"span.delete\")) {\n                ContentView.removeTask(e.target.closest('li'));\n                ContentView.refreshTaskContent();\n            }\n            // complete task button\n            else if (e.target && e.target.matches(\"span.radio\")) {\n                ContentView.toggleTaskCompletion(e.target.closest('li'));\n            }\n        });\n    },\n};","import { menuEventHandlers, listContentEventHandlers } from \"./eventHandlers\";\nimport { dataController } from \"./dataController\"\nimport { MenuView } from \"./Views/MenuView\";\n\ninit();\n\nif (window.localStorage.length > 0) {\n    dataController.importProjects();\n    MenuView.renderProjectsList();\n}\n\nfunction init() {\n    Object.values(menuEventHandlers).forEach(handler => handler());\n    Object.values(listContentEventHandlers).forEach(handler => handler());\n}\n\n"],"names":["toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","startOfDay","date","_date","setHours","isToday","dateLeft","dateRight","now","constructFrom","value","add","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","amount","isNaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","setFullYear","getFullYear","addMonths","msToAdd","setDate","addDays","Task","newTitle","newDesc","newDate","newPriority","newisComplete","title","description","dueDate","priority","isComplete","getTitle","getDescription","getDueDate","getPriority","setTitle","setDescription","setDueDate","setPriority","getisComplete","toggleisComplete","ProjectsContainer","projects","createProject","push","project_title","tasks","priorityParser","str","getElementIndexByTitle","target_title","i","length","insert","task","ins_prior","ins_date","args","split","parseInt","splice","remove","task_title","index","getElementAt","getSize","exportData","data","Project","getProjectByIndex","getProject","createDOMElement","tagName","HTML_attributes","content","element","document","createElement","HTMLElement","HTMLUnknownElement","isStandardElement","console","warn","attribute","setAttribute","innerHTML","writeToStorage","key","window","localStorage","setItem","JSON","stringify","dataController","createNewProject","createNewTask","editTask","edits","project","desc","readProjectAllTasks","query","task_contents","readProjectTask","curr_task","deleteProjectTask","toggleTask","queryCompleteCount","count","deleteProjectCompleteTasks","queryAllTasksByCompletion","ret","j","queryAllTasksByPriority","queryAllTasksToday","queryAllTasksWeek","task_date","importProjects","getItem","parse","loadStorage","forEach","obj","readAllProjectTitles","res","MenuView","getElementById","classList","form","menu_li","class","append","FormData","get","li","menu_list","Array","from","children","node","isValid","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","isArray","array","predicate","test","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","result","tokenValue","replace","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getDayOfYear","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","startOfYear","startOfWeek","locale","getDay","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","floor","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","delimiter","sign","absOffset","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","warnOrThrowProtectedError","format","input","_message","subject","message","includes","RangeError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","isEqual","leftDate","rightDate","ContentView","strikeThroughListItem","radio","item","li_top","nextElementSibling","textContent","style","textDecoration","refreshTaskContent","active_tab","querySelector","contains","justifyContent","id","ul_tasks","li_task","task_right","task_left","p_title","svg_sq","svg_del","svg_radio_unchecked","date_to_str","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","matched","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","appendChild","p_priority","createLIHelper","toggleTaskDesc","btm_desc","color","fontStyle","removeTask","taskItem","toggleTaskCompletion","parentElement","clearCompletedTasks","OverlayView","display","query_res","valueAsDate","formData","unedited_title","reset","menuEventHandlers","handleOpenNewProjForm","addEventListener","handleCancelNewProjectForm","handleSubmitNewProjectForm","preventDefault","target","handleClickTab","matches","listContentEventHandlers","handleOpenNewTaskForm","handleCloseNewTaskForm","handleSubmitNewTaskForm","handleClearTasks","handleClickTask","closest","handler"],"sourceRoot":""}